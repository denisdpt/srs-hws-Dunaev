services:
  pgdb:
    image: postgres:alpine
    container_name: pgdb_scrapping
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: scrapping
      POSTGRES_USER: articles
      POSTGRES_PASSWORD: articles
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker_init.sql:/docker-entrypoint-initdb.d/docker_init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U articles -d scrapping"]
      interval: 10s
      retries: 5

  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc localhost 2181 | grep imok"]
      interval: 10s
      retries: 5

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092 || exit 1"]
      interval: 10s
      retries: 5

  keywords:
    build:
      context: ../keyword_service
      dockerfile: Dockerfile
    container_name: keywords
    ports:
      - "5000:5000"
    environment:
      HOST: "0.0.0.0"
      PORT: "5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 5s
      retries: 5

  scrapper:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scrapper
    depends_on:
      pgdb:
        condition: service_healthy
      kafka:
        condition: service_healthy
      keywords:
        condition: service_healthy
    environment:
      KEYWORDS_SERVICE_URL: "http://keywords:5000/extract"
    volumes:
      - ./config/config.yaml:/app/config/config.yaml
    ports:
      - "9003:9003"

volumes:
  pgdata:
