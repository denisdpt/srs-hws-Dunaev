C:\Users\Denis>curl -X POST http://localhost:5000/extract -H "Content-Type: application/json" -d "{\"text\":\"Простой и эффективный супервизор на С++ с универсальным Makefile. Несмотря на развитие лингвистических моделей, я подумал, что моя версия супервизора может быть достаточно интересна для размещения в статье. Назначение супервизора - поднять повторно программу, которая по каким-то причинам упала с ошибкой. Причём если программа завершила работу без ошибки, то она перезапущена не будет, как и не будут создаваться логи. В логах пишется время падения и тип ошибки. Универсальный Makefile может быть интересен тем, что его достаточно закинуть в папку с исходниками, добавить необходимые пути вида: LDFLAGS = -I/usr/include/boost, LIBS = -lboost_serialization. Тема статьи не претендует на новизну, но может оказаться кому-то полезной. В первую очередь - это бэкенд, так как непрерывность работы там более важна. Хочется отметить, что в настоящее время С++ итак достаточно надёжный язык программирования. Вопрос в том, что в учебных заведениях, как правило, сначала изучается Си, а только потом С++ и зачастую стиль кода на С++ - Си с классами. Естественно, это влияет на репутацию языка как недостаточно надёжного. С наступлением эпохи лингвистических моделей код на С++ стал существенно надёжнее, так как ошибок с памятью я вот не встречал в сгенерированном коде, а логические ошибки - явление нередкое, но сам код создаёт впечатление образцового. Базовый код получился сравнительно небольшим, я решил его не перегружать функционалом. Основной поток оставлен пустым для возможностей дописывания под свои нужны, отслеживаемая программа запускается в дополнительном потоке.\"}"
{"keywords":["\u043a\u043e\u0434\u0435 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043e\u0448\u0438\u0431\u043a\u0438","\u0441\u0443\u043f\u0435\u0440\u0432\u0438\u0437\u043e\u0440 \u0443\u043d\u0438\u0432\u0435\u0440\u0441\u0430\u043b\u044c\u043d\u044b\u043c makefile","\u0441\u0442\u0430\u0442\u044c\u0435 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0443\u043f\u0435\u0440\u0432\u0438\u0437\u043e\u0440\u0430","\u0441\u0443\u043f\u0435\u0440\u0432\u0438\u0437\u043e\u0440\u0430 \u043f\u043e\u0434\u043d\u044f\u0442\u044c","\u043d\u0430\u0434\u0451\u0436\u043d\u043e\u0433\u043e \u043d\u0430\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0435\u043c \u044d\u043f\u043e\u0445\u0438","\u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043a\u0430\u043a\u0438\u043c"]}
